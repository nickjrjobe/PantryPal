# Workflow name
name: Initial Java CI

# Trigger this workflow on every push
on: [push]

# Define permissions for the GitHub token in this workflow
permissions:
  contents: read
  checks: write
  id-token: write

# Define environment variables for use in multiple workflow steps
env:
  JAVA_VERSION: '11'
  DISTRIBUTION: 'temurin'

# Define the jobs to run in this workflow
jobs:
  # Define the build job
  build:
    # Run this job on the latest Ubuntu version
    runs-on: ubuntu-latest
    # Define a strategy for running this job with different configurations
    strategy:
      matrix:
        # Run this job twice, once for each component: 'server' and 'client'
        component: ['server', 'client']
    
    # Define the steps for this job
    steps:
      # Check out the repository for the workflow
      - uses: actions/checkout@v3

      # Set up the JDK with the version and distribution from the environment variables
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Build the project with Gradle
      - name: Execute Gradle build
        run: ./gradlew build

      # Publish the test report
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          detailed_summary: true
          include_passed: true

  # Define the lint job, which will check the code for style issues
  lint:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository for the workflow
      - uses: actions/checkout@v3

      # Set up the JDK with the version and distribution from the environment variables
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Run the linting script
      - name: Lint 
        run: ./gradlew lint